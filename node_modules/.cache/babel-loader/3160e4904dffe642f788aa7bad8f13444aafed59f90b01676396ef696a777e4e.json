{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\My Desktop\\\\Documents\\\\PTIT\\\\HocKy1_2025-2026\\\\LapTrinhWeb\\\\photo-sharing-v1\\\\photo-sharing-v1\\\\src\\\\components\\\\UserDetail\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport \"./styles.css\";\nimport { useParams } from \"react-router-dom\";\nimport models from \"../../modelData/models\";\n\n/**\n * Define UserDetail, a React component of Project 4.\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserDetail() {\n  _s();\n  const user = useParams();\n  const users = models.userListModel();\n  const userinfo = users.find(i => i._id === user.userId);\n  if (!userinfo) {\n    return /*#__PURE__*/_jsxDEV(\"alert\", {\n      children: [\"Invalid ID \", user.userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: [\"This should be the UserDetail view of the PhotoShare app. Since it is invoked from React Router the params from the route will be in property match. So this should show details of user: \", user.userId, \". You can fetch the model for the user from models.userModel.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_s(UserDetail, \"FNCnUu0QfNkvCQEBGIq8BW5AUME=\", false, function () {\n  return [useParams];\n});\n_c = UserDetail;\nexport default UserDetail;\nvar _c;\n$RefreshReg$(_c, \"UserDetail\");","map":{"version":3,"names":["React","Typography","useParams","models","jsxDEV","_jsxDEV","Fragment","_Fragment","UserDetail","_s","user","users","userListModel","userinfo","find","i","_id","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c","$RefreshReg$"],"sources":["C:/Users/My Desktop/Documents/PTIT/HocKy1_2025-2026/LapTrinhWeb/photo-sharing-v1/photo-sharing-v1/src/components/UserDetail/index.jsx"],"sourcesContent":["import React from \"react\";\nimport {Typography} from \"@mui/material\";\n\nimport \"./styles.css\";\nimport {useParams} from \"react-router-dom\";\nimport models from \"../../modelData/models\";\n\n/**\n * Define UserDetail, a React component of Project 4.\n */\nfunction UserDetail() {\n    const user = useParams();\n    const users = models.userListModel();\n    const userinfo = users.find((i) => (i._id === user.userId));\n    if(!userinfo){\n      return <alert>Invalid ID {user.userId}</alert>;\n    }\n    return (\n        <>\n          <Typography variant=\"body1\">\n            This should be the UserDetail view of the PhotoShare app. Since it is\n            invoked from React Router the params from the route will be in property match.\n            So this should show details of user: {user.userId}.\n            You can fetch the model for the user from models.userModel.\n          </Typography>\n        </>\n      \n    );\n}\n\nexport default UserDetail;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,UAAU,QAAO,eAAe;AAExC,OAAO,cAAc;AACrB,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,MAAM,MAAM,wBAAwB;;AAE3C;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGA,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGR,SAAS,CAAC,CAAC;EACxB,MAAMS,KAAK,GAAGR,MAAM,CAACS,aAAa,CAAC,CAAC;EACpC,MAAMC,QAAQ,GAAGF,KAAK,CAACG,IAAI,CAAEC,CAAC,IAAMA,CAAC,CAACC,GAAG,KAAKN,IAAI,CAACO,MAAO,CAAC;EAC3D,IAAG,CAACJ,QAAQ,EAAC;IACX,oBAAOR,OAAA;MAAAa,QAAA,GAAO,aAAW,EAACR,IAAI,CAACO,MAAM;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAChD;EACA,oBACIjB,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACEb,OAAA,CAACJ,UAAU;MAACsB,OAAO,EAAC,OAAO;MAAAL,QAAA,GAAC,4LAGW,EAACR,IAAI,CAACO,MAAM,EAAC,+DAEpD;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAAC,gBACb,CAAC;AAGX;AAACb,EAAA,CAlBQD,UAAU;EAAA,QACFN,SAAS;AAAA;AAAAsB,EAAA,GADjBhB,UAAU;AAoBnB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}